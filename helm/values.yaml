global:
  cloudProvider: {}
  tracing: {}
  metrics: {}
  environment: ""
  useNodeAffinity: false
  serviceUrls:
    syncManager: ""
    mapproxyApi: ""
    catalogManager: ""
    jobManager: ""
    mapServerPublicDNS: ""
  ingestion:
    watchDirectoryOptions:
      directory: 'watch'
  jobManagement:
    jobDomain: RASTER
    ingestion:
      new: 
        jobType: ""
        splitTilesTaskType: ""
        mergeTilesTaskType: ""
      update: 
        jobType: ""
        mergeTilesTaskType: ""
      updateSwap:
        jobType: ""
        supportedIngestionSwapTypes: {}
        # - productType: ""
        #   productSubType: ""
    seed: 
      jobType: ""
      taskType: ""
    
      
  storage:
    tilesStorageProvider: ""
    fs:
      ingestionSourcePvc:
        enabled: false
        name: ""
        subPath: ""
  ca:
    secretName: ''
    path: '/usr/local/share/ca-certificates'
    key: 'ca.crt'
  ingress:
    domain: 'apps.aroapp.io'

serviceUrls:
  syncManager: ""
  mapproxyApi: ""
  catalogManager: ""
  jobManager: ""
  mapServerPublicDNS: ""
jobManagement:
  jobDomain: ""
  ingestion:
    new: 
      jobType: ""
      splitTilesTaskType: ""
      mergeTilesTaskType: ""
    update: 
      jobType: ""
      mergeTilesTaskType: ""
    updateSwap:
      jobType: ""
      supportedIngestionSwapTypes: {}
      # - productType: ""
      #   productSubType: ""
  seed: 
    jobType: ""
    taskType: ""
    
storage:
  tilesStorageProvider: ""
  fs:
    ingestionSourcePvc:
      enabled: false
      name: ""
      subPath: ""
ingestion:
  watchDirectoryOptions:
    directory: 'watch'

enabled: true
environment: development
replicaCount: 1
initialDelaySeconds: 60
nodePort: 30030 #for minikube deployment only
resetOnConfigChange: true
imagePullPolicy: Always

cloudProvider:
  dockerRegistryUrl: my-registry-url.io
  imagePullSecretName: 'my-registry-secret'
  flavor: openshift

image:
  repository: discrete-overseer-creator
  tag: 'latest'

enableWMS: true

# add pod annotations
# example:
# podAnnotations:
  # annotation1: annotation-value-1
  # annotation2: annotation-value-2
podAnnotations: {}

env:
  forbiddenTypesForParallelIngesion:
    - Ingestion_New
    - Ingestion_Update
    - Ingestion_Swap_Update
  port: 80
  targetPort: 8080
  protocol: TCP
  logLevel: info
  logPrettyPrintEnabled: false
  responseCompressionEnabled: true
  requestPayloadLimit: 1mb
  tilingZoomGroups:
  - '0-12'
  - '13'
  - '14'
  - '15'
  - '16'
  - '17'
  - '18'
  - '19'
  - '20'
  - '21'
  - '22'
  - '23'
  shouldSync: true
  layerSourceDir: '/layerSources'
  displayNameDir: "\\layerSources"
  validFileExtensions: 
  - 'gpkg'
  bboxSizeTiles: 10000
  mergeBatchSize: 10000
  useNewTargetFlagInUpdateTasks: true
  splitterTasksBatchSize: 100
  mergerTasksBatchSize: 100
  validationValuesByInfo:
    crs: 
    - 4326
    fileFormat: 
    - 'GPKG'
    pixelSizeRange:
      min: 0.000000335276
      max: 0.703125
    tileSize : 256
    resolutionFixedPointTolerance: 12
    extentBufferInMeters: 50
  disableHttpClientLogs: false
  httpRetry:
    attempts: 5
    delay: exponential
    resetTimeout: true
  linksTemplate:
    mountPath: /usr/app/config
    fileName: linkTemplates.template
  mapproxyCache:
    grids: WorldCRS84
    maxZoom: 21
  tracing:
    enabled: false
    url: http://localhost:55681/v1/trace
  metrics:
    prometheus:
      scrape: true
      port: 8080
    enabled: false
    url: http://localhost:55681/v1/metrics
    buckets:
    - 0.005
    - 0.01
    - 0.025
    - 0.05
    - 0.1
    - 0.25
    - 0.5
    - 1
    - 2.5
    - 5
    - 10
    - 15
    - 50
    - 250
    - 500

resources:
  enabled: true
  value:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

route:
  enabled: true
  path: /
  timeout:
    enabled: false # defaults to 30s by openshift
    duration: 60s # supported units (us, ms, s, m, h, d)

ingress:
  enabled: false
  type: 'nginx-org' # supported values: 'nginx-org' | 'nginx-kubernetes'
  path: /
  host: 'localhost'
  cors:
    enabled: true
    origin: '*'
