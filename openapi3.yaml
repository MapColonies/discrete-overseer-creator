openapi: 3.0.1
info:
  title: discrete-overseer-creator
  description: service that responsible for validating and ingesting discrete layers
  version: 4.10.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
paths:
  /layers:
    post:
      operationId: createLayer
      tags:
        - layers
      summary: start a process of creating new layer from raw data
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                ./Schema/discreteIngestion/ingestionParams.yaml#/components/schemas/IngestionParams
            examples:
              createLayerExample:
                $ref: '#/components/examples/createLayerExample'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: OK
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
        '409':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
        '500':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
  /layers/validateSources:
    post:
      operationId: validateSources
      tags:
        - layers
      summary: checks that all provided files have valid raw data
      requestBody:
        description: A json object containing array of files and origin source path
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                originDirectory:
                  type: string
                  description: layer source directory
                fileNames:
                  type: array
                  description: layer sources
                  items:
                    type: string
                    pattern: ^.+\.[Gg][Pp][Kk][Gg]$
              required:
                - originDirectory
                - fileNames
            example:
              originDirectory: string
              fileNames:
                - example.gpkg
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filesCheckResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
  /layers/sourcesInfo:
    post:
      operationId: getGdalInfo
      tags:
        - layers
      summary: returns the GDAL info for the provided source files
      requestBody:
        description: A json object containing array of files and origin source path
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                originDirectory:
                  type: string
                  description: layer source directory
                fileNames:
                  type: array
                  description: layer sources
                  items:
                    type: string
                    pattern: ^.+\.[Gg][Pp][Kk][Gg]$
              required:
                - originDirectory
                - fileNames
            example:
              originDirectory: string
              fileNames:
                - example.gpkg
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filesInfoResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
        '404':
          description: Files not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
  /jobs/{jobId}/{taskId}/completed:
    post:
      operationId: completeJob
      tags:
        - jobs
      summary: update overseer on completion of a job
      parameters:
        - in: path
          name: jobId
          schema:
            type: string
            format: uuid
          required: true
          description: job id
        - in: path
          name: taskId
          schema:
            type: string
            format: uuid
          required: true
          description: task id
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: OK
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
        '404':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
        '500':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
  /toc:
    post:
      operationId: getToc
      tags:
        - toc
      summary: gets a toc file representing the given layer
      requestBody:
        description: A json object containing operation and toc source type
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
                productVersion:
                  type: string
                operation:
                  $ref: '#/components/schemas/operation'
                productType:
                  $ref: '#/components/schemas/productType'
              required:
                - productId
                - productVersion
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tocResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/tocResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
        '404':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
        '500':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
components:
  schemas:
    errorMessage:
      type: object
      properties:
        message:
          type: string
        stacktrace:
          type: string
      required:
        - message
    filesCheckResponse:
      type: object
      properties:
        isValid:
          type: boolean
        reason:
          type: string
      required:
        - isValid
    filesInfoResponse:
      type: array
      items:
        type: object
        properties:
          crs:
            type: number
          fileFormat:
            type: string
          pixelSize:
            type: number
          extentPolygon:
            $ref: ./Schema/geojson.yaml#/components/schemas/Geometry
        required:
          - crs
          - fileFormat
          - pixelSize
          - extentPolygon
        example:
          crs: 4326
          fileFormat: gpkg
          pixelSize: 0.072
          extentPolygon:
            type: Polygon
            coordinates:
              - - - -180
                  - -90
                - - -180
                  - 90
                - - 180
                  - 90
                - - 180
                  - -90
                - - -180
                  - -90
    tocResponse:
      type: object
      properties:
        operation:
          $ref: '#/components/schemas/operation'
        productType:
          $ref: '#/components/schemas/productType'
        metadata:
          oneOf:
            - $ref: >-
                ./Schema/updateLayerMetadata.yaml#/components/schemas/updateLayerMetadata
            - type: object
              properties:
                productId:
                  type: string
                productVersion:
                  type: string
    operation:
      type: string
      enum:
        - ADD
        - UPDATE
        - REMOVE
    productType:
      $ref: ./Schema/updateLayerMetadata.yaml#/components/schemas/productType
  examples:
    createLayerExample:
      value:
        metadata:
          type: RECORD_RASTER
          classification: '3'
          productId: string
          productName: string
          productVersion: '47.1'
          productType: Orthophoto
          productSubType: string
          description: string
          srsId: string
          srsName: string
          producerName: string
          creationDate: '2022-10-25T10:44:42.787Z'
          sourceDateStart: '2022-10-25T10:44:42.787Z'
          sourceDateEnd: '2022-10-25T10:44:42.787Z'
          maxResolutionDeg: 0.072
          maxResolutionMeter: 8000
          minHorizontalAccuracyCE90: 4000
          transparency: TRANSPARENT
          sensors:
            - string
          region:
            - string
          rms: 0
          scale: 100000000
          footprint:
            type: Polygon
            coordinates:
              - - - -180
                  - -90
                - - -180
                  - 90
                - - 180
                  - 90
                - - 180
                  - -90
                - - -180
                  - -90
          productBoundingBox: '-180,-90,180,90'
        originDirectory: string
        fileNames:
          - example.gpkg
